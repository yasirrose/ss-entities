name: Publish NPM Package

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14
        registry-url: 'https://registry.npmjs.org'

    - name: Install dependencies
      run: npm install

    - name: Determine Version Bump
      id: determine_bump
      run: |
        MESSAGE=$(git log -1 --pretty=%B)
        if echo "$MESSAGE" | grep -qi "BREAKING CHANGE"; then
          echo "major"
        elif echo "$MESSAGE" | grep -qi "feat:"; then
          echo "minor"
        else
          echo "patch"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

    - name: Update Package Version
      run: |
        # Get current version from package.json
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        
        # Determine bump type
        BUMP_TYPE=${{ steps.determine_bump.outputs.major_minor_patch }}

        # Calculate new version
        if [ "$BUMP_TYPE" != "none" ]; then
          NEW_VERSION=$(node -p "require('semver').inc('$CURRENT_VERSION', '$BUMP_TYPE')")
          sed -i "s/\"version\": \".*\"/\"version\": \"$NEW_VERSION\"/" package.json
        fi

        # Commit and push updated package.json
        git config user.name "yasirrose"
        git config user.email "yasirrose@hotmail.com"
        git commit -am "chore: version bump" --allow-empty
        git push origin HEAD:${{ github.ref }} --follow-tags
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}


    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
